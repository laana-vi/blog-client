{"version":3,"sources":["service.jsx","hooks/usePost.jsx","components/basic/Error.jsx","components/admin/Admin.jsx","components/admin/AdminPost.jsx","components/authorization/Login.jsx","hooks/useRegister.jsx","components/authorization/Register.jsx","components/basic/Pagination.jsx","components/blog/Home.jsx","components/settings/Settings.jsx","components/settings/PasswordReset.jsx","components/settings/PasswordResetConfirm.jsx","components/basic/Header.jsx","components/basic/Footer.jsx","components/basic/BasicRoute.jsx","routes/PublicRoute.jsx","routes/PrivateRoute.jsx","components/blog/Post.jsx","App.jsx","index.jsx"],"names":["BASE_URL","POSTS","USERS","ADMIN","ADD_POST","EDIT_POST","DELETE_POST","GET_POST_TO_EDIT","GET_USER_DETAIL","EDIT_USER","DELETE_USER","token","localStorage","getItem","parseJwt","undefined","base64Url","split","base64","replace","JSON","parse","window","atob","expTime","exp","Math","ceil","Date","removeItem","isValidToken","slugify","str","toLowerCase","trim","getAuthorName","users","authorId","find","user","Number","id","getTime","timeStr","timeArr","substring","axiosInstance","axios","create","baseURL","validateStatus","headers","Authorization","accept","axiosInstanceForFiles","getAllPosts","get","editLikesBySlug","slug","like","put","usePost","useState","title","setTitle","content","setContent","user_id","author","setAuthor","category","setCategory","setSlug","image","setImage","Error","error","setError","setTimeout","Admin","categories","posts","setPosts","history","useHistory","userId","useEffect","mounted","then","res","data","filter","post","map","to","onClick","delete","push","location","reload","type","onChange","e","target","value","cols","rows","defaultValue","name","files","date","getFullYear","getUTCMonth","getDate","getHours","getMinutes","getSeconds","formData","FormData","append","status","console","log","AdminPost","useParams","timestamp","setTimestamp","getPostById","patch","editPost","Login","usernameLogin","setUsernameLogin","passwordLogin","setPasswordLogin","placeholder","user_name","password","setItem","access","defaults","detail","useRegister","email","setEmail","username","setUsername","firstName","setFirstName","lastName","setLastName","dateOfBirth","setDateOfBirth","Register","setPassword","first_name","last_name","date_of_birth","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","i","number","Home","setSelect","loading","search","setSearch","includes","style","maxWidth","src","alt","length","slice","join","likes","Settings","obj","PasswordReset","resetPassword","PasswordResetConfirm","setToken","passwordReseConfirm","Header","Footer","BasicRoute","PublicRoute","path","exact","Component","PrivateRoute","Post","setPost","setLikes","getPostBySlug","index","indexOf","tmp","splice","App","setCategories","setUsers","select","currentPage","setCurrentPage","setLoading","indexOfLastPost","indexOfFirstPost","currentPosts","pageNumber","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00d14bd5.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst BASE_URL = 'http://127.0.0.1:8000/api'\r\nconst POSTS = 'posts/'\r\nconst CATEGORIES = 'categories/'\r\nconst USERS = 'users/'\r\nconst TOKEN = 'token'\r\nconst ADMIN = 'admin'\r\nconst ADD_POST = `${ADMIN}/create/`\r\nconst EDIT_POST = `${ADMIN}/edit/`\r\nconst DELETE_POST = `${ADMIN}/delete/`\r\nconst GET_POST_TO_EDIT = `${ADMIN}/edit/postdetail/`\r\nconst GET_USER_DETAIL = `${USERS}user/edit/userdetail/`\r\nconst EDIT_USER = `${USERS}user/edit/`\r\nconst DELETE_USER = `${USERS}user/delete/`\r\nconst PASSWORD_RESET = 'password_reset/'\r\nconst PASSWORD_RESET_CONFIRM = 'password_reset/confirm/'\r\nconst EDIT_LIKES = 'edit/likes/'\r\n\r\nexport const token = localStorage.getItem('access_token')\r\n\r\nexport const parseJwt = (token) => {\r\n    if (token !== undefined) {\r\n        let base64Url = token?.split('.')[1];\r\n        let base64 = base64Url?.replace('-', '+')?.replace('_', '/');\r\n        if (base64 !== undefined) {\r\n            return JSON.parse(window.atob(base64));\r\n        }\r\n        else return undefined\r\n    }\r\n    else return undefined\r\n}\r\n\r\nconst isValidToken = () => {\r\n    const expTime = parseJwt(token)?.exp\r\n    const timeNow = Math.ceil(new Date() / 1000)\r\n    return timeNow > expTime && localStorage.removeItem('access_token')\r\n}\r\n\r\nisValidToken()\r\n\r\nexport const truncate = (str) => {\r\n    return str.split(' ').length > 20 ? str.split(' ').slice(0, 20).join(' ') + '...' : str\r\n}\r\n\r\nexport const slugify = (str) => {\r\n    return str.toLowerCase().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').trim()\r\n}\r\nexport const getAuthorName = (users, authorId) => {\r\n    return users?.find(user => Number(user?.id) === Number(authorId))\r\n}\r\n\r\nexport const getTime = (timeStr) => {\r\n    let timeArr = timeStr.split('-')\r\n    return `${timeArr[2].substring(0, 2)}.${timeArr[1]}.${timeArr[0]}`\r\n}\r\n\r\n\r\n\r\nexport const axiosInstance = axios.create({\r\n    baseURL: `${BASE_URL}/`,\r\n    validateStatus: () => true,\r\n    headers: { Authorization: localStorage.getItem('access_token') ? 'JWT ' + localStorage.getItem('access_token') : null, 'Content-Type': 'application/json', accept: 'application/json', },\r\n})\r\n\r\nexport const axiosInstanceForFiles = axios.create({\r\n    baseURL: `${BASE_URL}/`,\r\n    validateStatus: () => true,\r\n    headers: { Authorization: localStorage.getItem('access_token') ? 'JWT ' + localStorage.getItem('access_token') : null, 'Content-Type': 'multipart/form-data', },\r\n})\r\n\r\nexport const getAllPosts = () => {\r\n    return axiosInstance.get(POSTS)\r\n}\r\n\r\nexport const getPostBySlug = (slug) => {\r\n    return axiosInstance.get(`${POSTS}${slug}`)\r\n}\r\n\r\nexport const getAllCategories = () => {\r\n    return axiosInstance.get(CATEGORIES)\r\n}\r\n\r\nexport const getAllUsers = () => {\r\n    return axiosInstance.get(USERS)\r\n}\r\n\r\n\r\nexport const regiserUser = (user) => {\r\n    return axiosInstance.post(USERS, user)\r\n}\r\n\r\nexport const loginUser = (user) => {\r\n    return axiosInstance.post(TOKEN, user)\r\n}\r\n\r\nexport const addPost = (post) => {\r\n    return axiosInstanceForFiles.post(ADD_POST, post)\r\n}\r\n\r\nexport const editPost = (id, post) => {\r\n    return axiosInstanceForFiles.patch(`${EDIT_POST}${id}/`, post)\r\n}\r\n\r\nexport const getPostById = (id) => {\r\n    return axiosInstance.get(`${GET_POST_TO_EDIT}${id}`)\r\n}\r\n\r\nexport const deletePost = (id) => {\r\n    return axiosInstance.delete(`${DELETE_POST}${id}/`)\r\n}\r\n\r\nexport const getUserById = (id) => {\r\n    return axiosInstance.get(`${GET_USER_DETAIL}${id}/`)\r\n}\r\n\r\nexport const editUser = (id, user) => {\r\n    return axiosInstance.put(`${EDIT_USER}${id}/`, user)\r\n}\r\n\r\nexport const deleteUser = (id) => {\r\n    return axiosInstance.delete(`${DELETE_USER}${id}/`)\r\n}\r\n\r\nexport const resetPassword = (email) => {\r\n    return axiosInstance.post(PASSWORD_RESET, email)\r\n}\r\n\r\nexport const passwordReseConfirm = (token, password) => {\r\n    return axiosInstance.post(PASSWORD_RESET_CONFIRM, token, password)\r\n}\r\n\r\nexport const editLikesBySlug = (slug, like) => {\r\n    return axiosInstance.put(`${EDIT_LIKES}${slug}/`, like)\r\n}\r\n","import { useState } from \"react\"\r\nimport { parseJwt, token } from \"../service\"\r\n\r\nexport const usePost = () => {\r\n    const [title, setTitle] = useState('')\r\n    const [content, setContent] = useState('')\r\n    const [author, setAuthor] = useState(parseJwt(token)?.user_id)\r\n    const [category, setCategory] = useState('')\r\n    const [slug, setSlug] = useState('')\r\n    const [image, setImage] = useState('')\r\n    const [timestamp, setTimestamp] = useState('')\r\n\r\n    return [title, setTitle, content, setContent, author, setAuthor, category, setCategory, slug, setSlug, image, setImage, timestamp, setTimestamp]\r\n}","const Error = ({ error, setError }) => {\r\n    setTimeout(() =>\r\n        setError(''), 10000)\r\n    return (\r\n        <div>\r\n            <p>{error}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error","import { useEffect, useState } from \"react\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { usePost } from \"../../hooks/usePost\"\r\nimport { addPost, deletePost, getAllPosts, parseJwt, slugify, token } from \"../../service\"\r\nimport Error from \"../basic/Error\"\r\n\r\nconst Admin = ({ user, categories }) => {\r\n    const [posts, setPosts] = useState([])\r\n    const [title, setTitle, content, setContent, author, setAuthor, category, setCategory, slug, setSlug, image, setImage, likes, setLikes] = usePost()\r\n    const [error, setError] = useState('')\r\n    const history = useHistory()\r\n\r\n    const userId = parseJwt(token).user_id\r\n\r\n    useEffect(() => {\r\n        let mounted = true\r\n        getAllPosts().then(res => {\r\n            if (mounted) {\r\n                setPosts([...res.data].filter(post => Number(post.author) === Number(userId)))\r\n            }\r\n        })\r\n        return () => { mounted = false }\r\n    }, [userId])\r\n\r\n    return (\r\n        <>\r\n            {\r\n                posts.map(post => {\r\n                    return (\r\n                        <div key={post.id}>\r\n                            <Link to={`/admin/${post.id}`}>{post.title}</Link>\r\n                            <button onClick={() => {\r\n                                deletePost(post.id)\r\n                                history.push('/home')\r\n                                window.location.reload()\r\n                            }}>Delete</button>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            <div>\r\n                <h3>Add new post</h3>\r\n                <div>\r\n                    <label>Title: </label>\r\n                    <input type=\"text\" onChange={(e) => {\r\n                        setTitle(e.target.value)\r\n                        setSlug(slugify(e.target.value))\r\n                    }} />\r\n                </div>\r\n                <p>Slug: {slug}</p>\r\n                <div>\r\n                    <label>Content: </label>\r\n                    <textarea id=\"\" cols=\"50\" rows=\"10\" onChange={(e) => {\r\n                        setContent(e.target.value)\r\n                    }}></textarea>\r\n                </div>\r\n                <p>Author: {user}</p>\r\n                <div>\r\n                    <label>Category: </label>\r\n                    <select onChange={(e) => {\r\n                        setCategory(e.target.value)\r\n                    }}>\r\n                        <option defaultValue='-1'>Select Category</option>\r\n                        {categories.map(category => <option key={category.id} value={category.name}>{category.name}</option>)}\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <label>Image: </label>\r\n                    <input type=\"file\" onChange={(e) => {\r\n                        setImage(e.target.files)\r\n                    }} />\r\n                </div>\r\n                <button onClick={() => {\r\n                    let date = new Date()\r\n                    date = `${date.getFullYear()}-${date.getUTCMonth()}-${date.getDate()} ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`\r\n                    let formData = new FormData()\r\n                    formData.append('title', title)\r\n                    formData.append('content', content)\r\n                    formData.append('slug', slug)\r\n                    formData.append('author', author)\r\n                    formData.append('category', category)\r\n                    formData.append('image', image[0])\r\n                    formData.append('timestamp', date)\r\n                    addPost(formData).then(res => {\r\n                        if (res.status === 400) {\r\n                            if (res.data.title) {\r\n                                setError(res.data.title)\r\n                            }\r\n                            else if (res.data.content) {\r\n                                setError(res.data.content)\r\n                            }\r\n                            else if (res.data.image) {\r\n                                setError(res.data.image)\r\n                            }\r\n                        }\r\n                        else {\r\n                            history.push('/home')\r\n                            window.location.reload()\r\n                        }\r\n                        console.log(res)\r\n                    })\r\n                }}>Add post</button>\r\n                <Error error={error} setError={setError} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Admin","import { useEffect, useState } from \"react\"\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport { usePost } from \"../../hooks/usePost\"\r\nimport { editPost, getPostById, slugify } from \"../../service\"\r\nimport Error from \"../basic/Error\"\r\n\r\nconst AdminPost = ({ posts, categories }) => {\r\n    let { id } = useParams()\r\n    const [title, setTitle, content, setContent, author, setAuthor, category, setCategory, slug, setSlug, image, setImage,timestamp, setTimestamp] = usePost()\r\n    const [error, setError] = useState('')\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        let mounted = true\r\n        getPostById(id).then(res => {\r\n            if (mounted) {\r\n                setTitle(res.data.title)\r\n                setContent(res.data.content)\r\n                setAuthor(res.data.author)\r\n                setCategory(res.data.category)\r\n                setSlug(res.data.slug)\r\n                setImage(res.data.image)\r\n                setTimestamp(res.data.timestamp)\r\n            }\r\n        })\r\n        return () => { mounted = false }\r\n    }, [id, setTitle, setContent, setAuthor, setCategory, setSlug, setImage, setTimestamp])\r\n    return (\r\n        <div>\r\n            <h3>Edit post</h3>\r\n            <div>\r\n                <label>Title: </label>\r\n                <input value={title} type=\"text\" onChange={(e) => {\r\n                    setTitle(e.target.value)\r\n                    setSlug(slugify(e.target.value))\r\n                }} />\r\n            </div>\r\n            <p>Slug: {slug}</p>\r\n            <div>\r\n                <div>\r\n                    <label>Content: </label>\r\n                </div>\r\n\r\n                <textarea value={content} id=\"\" cols=\"50\" rows=\"10\" onChange={(e) => {\r\n                    setContent(e.target.value)\r\n                }}></textarea>\r\n            </div>\r\n            <div>\r\n                <label>Category: </label>\r\n                <option defaultValue='-1'>Select Category</option>\r\n                <select onChange={(e) => {\r\n                    setCategory(e.target.value)\r\n                }}>\r\n                    <option defaultValue='-1'>Select Category</option>\r\n                    {categories.map(category => <option key={category.id} value={category.name}>{category.name}</option>)}\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <label>Image: </label>\r\n                <input type=\"file\" onChange={(e) => {\r\n                    setImage(e.target.files)\r\n                }} />\r\n            </div>\r\n            <button onClick={() => {\r\n                let formData = new FormData()\r\n                formData.append('title', title)\r\n                formData.append('content', content)\r\n                formData.append('slug', slug)\r\n                formData.append('author', author)\r\n                formData.append('category', category)\r\n                formData.append('id', id)\r\n                formData.append('timestamp', timestamp)\r\n                image[0] !== 'h' && formData.append('image', image[0])\r\n                editPost(id, formData).then(res => {\r\n\r\n                    if (res.status === 400) {\r\n                        if (res.data.title) {\r\n                            setError(res.data.title)\r\n                        }\r\n                        else if (res.data.content) {\r\n                            setError(res.data.content)\r\n                        }\r\n                        else if (res.data.image) {\r\n                            setError(res.data.image)\r\n                        }\r\n                    }\r\n                    else {\r\n                        history.push('/home')\r\n                        window.location.reload()\r\n                    }\r\n                    console.log(res)\r\n                })\r\n            }}>Edit post</button>\r\n            <Error error={error} setError={setError} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminPost","import { useState } from \"react\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { axiosInstance, loginUser } from \"../../service\"\r\nimport Error from \"../basic/Error\"\r\n\r\nconst Login = () => {\r\n    const [error, setError] = useState('')\r\n    const [usernameLogin, setUsernameLogin] = useState('')\r\n    const [passwordLogin, setPasswordLogin] = useState('')\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"text\" placeholder=\"username\" onChange={(e) => setUsernameLogin(e.target.value)} />\r\n            <input type=\"password\" placeholder=\"password\" onChange={(e) => setPasswordLogin(e.target.value)} />\r\n            <button onClick={() => {\r\n                loginUser({\r\n                    user_name: usernameLogin,\r\n                    password: passwordLogin\r\n                }).then(res => {\r\n\r\n                    if (res.status === 200) {\r\n                        localStorage.setItem('access_token', res.data.access)\r\n                        axiosInstance.defaults.headers['Authorization'] = 'JWT ' + localStorage.getItem('access_token')\r\n                        window.location.reload()\r\n                        history.push('/')\r\n\r\n                    }\r\n                    else if (res.data.user_name) {\r\n                        setError(res.data.user_name[0])\r\n                    }\r\n                    else if (res.data.password) {\r\n                        setError(res.data.password[0])\r\n                    }\r\n                    else if (res.status === 401) {\r\n                        setError(res.data.detail)\r\n                    }\r\n                })\r\n            }}>Login</button>\r\n            <Error error={error} setError={setError} />\r\n            <Link to=\"/password-reset\">Forgot your password?</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import { useState } from \"react\"\r\n\r\nexport const useRegister = () => {\r\n    const [email, setEmail] = useState('')\r\n    const [username, setUsername] = useState('')\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [dateOfBirth, setDateOfBirth] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n\r\n    return [email, setEmail, username, setUsername, firstName, setFirstName, lastName, setLastName, dateOfBirth, setDateOfBirth, password, setPassword]\r\n}","import { useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useRegister } from \"../../hooks/useRegister\"\r\nimport { regiserUser } from \"../../service\"\r\nimport Error from \"../basic/Error\"\r\n\r\nconst Register = () => {\r\n    const [email, setEmail, username, setUsername, firstName, setFirstName, lastName, setLastName, dateOfBirth, setDateOfBirth, password, setPassword] = useRegister()\r\n    const [error, setError] = useState('')\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"email\" placeholder=\"email\" onChange={(e) => { setEmail(e.target.value.trim()) }} />\r\n            <input type=\"text\" placeholder=\"username\" onChange={(e) => { setUsername(e.target.value.trim()) }} />\r\n            <input type=\"text\" placeholder=\"first name\" onChange={(e) => { setFirstName(e.target.value.trim()) }} />\r\n            <input type=\"text\" placeholder=\"last name\" onChange={(e) => { setLastName(e.target.value.trim()) }} />\r\n            <input type=\"date\" onChange={(e) => { setDateOfBirth(e.target.value.trim()) }} />\r\n            <input type=\"password\" placeholder=\"password\" onChange={(e) => { setPassword(e.target.value.trim()) }} />\r\n            <button onClick={() => {\r\n                regiserUser({\r\n                    email: email,\r\n                    user_name: username,\r\n                    first_name: firstName,\r\n                    last_name: lastName,\r\n                    date_of_birth: dateOfBirth,\r\n                    password: password\r\n                }).then(res => {\r\n                    if (res.status === 201) {\r\n                        history.push('/login')\r\n                    }\r\n                    else if (res.data.email) {\r\n                        setError(res.data.email[0])\r\n                    }\r\n                    else if (res.data.user_name) {\r\n                        setError(res.data.user_name[0])\r\n                    }\r\n                    else if (res.data.first_name) {\r\n                        setError(res.data.first_name[0])\r\n                    }\r\n                    else if (res.data.last_name) {\r\n                        setError(res.data.last_name[0])\r\n                    }\r\n                    else if (res.data.password) {\r\n                        setError(res.data.password[0])\r\n                    }\r\n                })\r\n            }}>Register</button>\r\n            <div>\r\n                <Error error={error} setError={setError}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register","const Pagination = ({ postsPerPage, totalPosts, paginate }) => {\r\n    const pageNumbers = []\r\n\r\n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n        pageNumbers.push(i)\r\n    }\r\n    return (\r\n        <div>\r\n            <nav>\r\n                <ul>\r\n                    {pageNumbers.map(number => (\r\n                        <button key={number} onClick={() => paginate(number) }>{number}</button>\r\n                    ))}\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination ","import { useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { getAuthorName, getTime, truncate } from \"../../service\"\r\nimport Pagination from \"../basic/Pagination\"\r\n\r\nconst Home = ({ posts, users, categories, setSelect, loading, postsPerPage, totalPosts, paginate }) => {\r\n    const [search, setSearch] = useState('')\r\n\r\n    if (loading) {\r\n        return (\r\n            <p>Loading...</p>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <>\r\n                <input type=\"text\" placeholder=\"search...\" onChange={(e) => setSearch(e.target.value)} />\r\n                <select onChange={(e) => {\r\n                    setSelect(e.target.value)\r\n                }}>\r\n                    <option defaultValue=\"-1\">Select a category</option>\r\n                    {categories.map(category => <option key={category.id} value={category.id}>{category.name}</option>)}\r\n                </select>\r\n                {posts.filter(post => post.content.toLowerCase().includes(search.toLowerCase()) || post.title.toLowerCase().includes(search.toLowerCase()) || getAuthorName(users, post?.author)?.user_name.toLowerCase().includes(search.toLowerCase())).map(post => {\r\n                    return (\r\n                        <div key={post.id}>\r\n                            <div>\r\n                                <img style={{ maxWidth: \"300px\" }} src={post.image} alt=\"\" />\r\n                            </div>\r\n                            <Link to={`/home/${post.slug}`}>\r\n                                <h3>{post.title}</h3>\r\n                            </Link>\r\n                            <p>{truncate(post.content)}</p>\r\n                            <p>Written by: {getAuthorName(users, post?.author)?.user_name}</p>\r\n                            <p>Likes: {post?.likes?.length}</p>\r\n                            <small>{getTime(post.timestamp)}</small>\r\n                        </div>\r\n                    )\r\n                })}\r\n                <Pagination postsPerPage={postsPerPage} totalPosts={totalPosts} paginate={paginate} />\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Home","import { useEffect} from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useRegister } from \"../../hooks/useRegister\"\r\nimport { deleteUser, editUser, getUserById, parseJwt, token } from \"../../service\"\r\n\r\nconst Settings = () => {\r\n    const [email, setEmail, username, setUsername, firstName, setFirstName, lastName, setLastName, dateOfBirth, setDateOfBirth] = useRegister()\r\n    const history = useHistory()\r\n    let userId = parseJwt(token).user_id\r\n\r\n    useEffect(() => {\r\n        let mounted = true\r\n        getUserById(userId).then(res => {\r\n            if (mounted) {\r\n                setEmail(res.data.email)\r\n                setUsername(res.data.user_name)\r\n                setFirstName(res.data.first_name)\r\n                setLastName(res.data.last_name)\r\n                setDateOfBirth(res.data.date_of_birth)\r\n            }\r\n        })\r\n        return () => { mounted = false }\r\n    }, [userId, setEmail, setUsername, setFirstName, setLastName, setDateOfBirth])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <label>Username: </label>\r\n                <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)}/>\r\n                <label>Email: </label>\r\n                <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n                <label>First Name: </label>\r\n                <input type=\"text\" value={firstName} onChange={(e) => setFirstName(e.target.value)}/>\r\n                <label>Last name: </label>\r\n                <input type=\"text\" value={lastName} onChange={(e) => setLastName(e.target.value)}/>\r\n                <label>Date of birth: </label>\r\n                <input type=\"date\" value={dateOfBirth} onChange={(e) => setDateOfBirth(e.target.value)}/>\r\n                <button onClick={() => {\r\n                    let obj = {\"user_name\" : username, \"first_name\": firstName, \"last_name\": lastName, \"email\": email, \"date_of_birth\": dateOfBirth, \"id\": userId}\r\n                    editUser(userId, obj )\r\n                    .then(res => console.log(res.data, obj))\r\n                }}>Submit</button>\r\n            </div>\r\n            <button onClick={() => {\r\n                deleteUser(userId).then(res => {\r\n                    history.push('/register')\r\n                    localStorage.removeItem('access_token')\r\n                })\r\n            }}>Detele Account</button>\r\n        </div>\r\n    )\r\n}\r\nexport default Settings","import { useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { resetPassword } from \"../../service\"\r\nimport Error from \"../basic/Error\"\r\n\r\nconst PasswordReset = () => {\r\n    const [email, setEmail] = useState('')\r\n    const [error, setError] = useState('')\r\n    const history = useHistory()\r\n    return (\r\n        <div>\r\n            <label>Please enter your email address: </label>\r\n            <input type=\"email\" onChange={(e) => { setEmail(e.target.value) }} />\r\n            <button onClick={() => {\r\n                resetPassword({ \"email\": email }).then(res => {\r\n                    if (res.data.email) {\r\n                        setError(res.data.email)\r\n                    }\r\n                    else if (res.status === 200) {\r\n                        history.push('/password-reset-confirm')\r\n                    }\r\n                })\r\n\r\n            }}>Send token</button>\r\n            <Error error={error} setError={setError} />\r\n            <p>Make sure to check your spam folder too.</p>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default PasswordReset","import { useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { passwordReseConfirm } from \"../../service\"\r\nimport Error from \"../basic/Error\"\r\n\r\nconst PasswordResetConfirm = () => {\r\n    const [password, setPassword] = useState('')\r\n    const [token, setToken] = useState('')\r\n    const [error, setError] = useState('')\r\n    const history = useHistory()\r\n    return (\r\n        <div>\r\n            <label>Enter your new password: </label>\r\n            <input type=\"password\" onChange={(e) => { setPassword(e.target.value) }} />\r\n            <label>Enter token: </label>\r\n            <input type=\"text\" onChange={(e) => { setToken(e.target.value) }} />\r\n            <button onClick={() => {\r\n                passwordReseConfirm({ \"password\": password, \"token\": token }).then(res => {\r\n                    if (res.data.password) {\r\n                        setError(res.data.password)\r\n                    }\r\n                    else if (res.data.token) {\r\n                        setError(res.data.token)\r\n                    }\r\n                    else if (res.status === 200) {\r\n                        history.push('/login')\r\n                    }\r\n                    else if(res.status === 404){\r\n                        setError('Token invalid.')\r\n                    }\r\n                })\r\n            }}>Confirm password reset</button>\r\n            <Error error={error} setError={setError} />\r\n        </div>\r\n    )\r\n}\r\nexport default PasswordResetConfirm","import { Link, useHistory } from \"react-router-dom\"\r\nimport { axiosInstance } from \"../../service\"\r\n\r\nconst Header = ({ user }) => {\r\n    const history = useHistory()\r\n    return (\r\n        <header>\r\n            <nav>\r\n                <h3>{user}</h3>\r\n                {\r\n                    user ?\r\n                        <>\r\n                            <Link to='/home'>Home</Link>\r\n                            <Link to='/admin'>Admin</Link>\r\n                            <Link to='/settings'>Settings</Link>\r\n                            <button onClick={() => {\r\n                                localStorage.removeItem('access_token')\r\n                                axiosInstance.defaults.headers['Authorization'] = null\r\n                                history.push('/login')\r\n                                window.location.reload()\r\n                            }}>Logout</button>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <Link to=\"/login\">Login</Link>\r\n                            <Link to='/register'>Register</Link>\r\n                        </>\r\n                }\r\n            </nav>\r\n        </header>\r\n\r\n    )\r\n}\r\n\r\nexport default Header","const Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>FOOTER</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import { Redirect } from \"react-router-dom\"\r\nimport { token } from \"../../service\"\r\n\r\nconst BasicRoute = () => {\r\n    return(\r\n        <>\r\n        {token ? <Redirect to=\"/home\"/> : <Redirect to=\"/login\"/>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BasicRoute","import { Route } from 'react-router-dom';\r\n\r\nconst PublicRoute = ({ path, exact, Component }) => {\r\n    return (\r\n        <Route exact={exact} path={path}>\r\n            <Component />\r\n        </Route>\r\n    )\r\n}\r\n\r\nexport default PublicRoute","import { Route, Redirect } from 'react-router-dom';\r\nimport { token } from '../service';\r\n\r\nconst PrivateRoute = ({ path, exact, Component }) => {\r\n    return token ?\r\n        <Route exact={exact} path={path}>\r\n            <Component />\r\n        </Route>\r\n        :\r\n        <Redirect to=\"/login\" />\r\n}\r\n\r\nexport default PrivateRoute","import { useEffect, useState } from \"react\"\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport { editLikesBySlug, getAuthorName, getPostBySlug, getTime, parseJwt, token } from \"../../service\"\r\n\r\nconst Post = ({ posts, users }) => {\r\n    let { slug } = useParams()\r\n    const [post, setPost] = useState()\r\n    const [likes, setLikes] = useState()\r\n    const history = useHistory()\r\n\r\n    const userId = parseJwt(token).user_id\r\n\r\n    useEffect(() => {\r\n        let mounted = true\r\n        getPostBySlug(slug).then(res => {\r\n            if (mounted) {\r\n                setPost(res.data)\r\n                setLikes(res.data.likes.length)\r\n            }\r\n        })\r\n        return () => { mounted = false }\r\n    }, [slug])\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img style={{ maxWidth: \"300px\" }} src={post?.image} alt=\"\" />\r\n            </div>\r\n            <h3>{post?.title}</h3>\r\n            <p>{post?.content}</p>\r\n            <p>Written by: {getAuthorName(users, post?.author)?.user_name}</p>\r\n            <small>{post && getTime(post?.timestamp)}</small>\r\n            <p>Likes: {likes}</p>\r\n            <button onClick={() => {\r\n                editLikesBySlug(slug, { \"likes\": [...post?.likes, userId] }).then(res => {\r\n                    setLikes(res?.data?.likes?.length)\r\n                    console.log(res.data)\r\n                })\r\n            }}>Like</button>\r\n            <button onClick={() => {\r\n                let index = post.likes.indexOf(userId)\r\n                let tmp = post.likes\r\n                tmp.splice(index, 1)\r\n                if (index !== -1) {\r\n                    editLikesBySlug(slug, { \"likes\": tmp }).then(res => {\r\n                        setLikes(res?.data?.likes.length)\r\n                        history.push('/home')\r\n                        window.location.reload()\r\n                    })\r\n                }\r\n            }}>Unlike</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import { useEffect, useState } from \"react\"\nimport { getAllCategories, getAllPosts, getAllUsers, parseJwt, token } from \"./service\"\nimport { BrowserRouter as Router, Switch } from 'react-router-dom'\n\nimport Admin from \"./components/admin/Admin\"\nimport AdminPost from \"./components/admin/AdminPost\"\nimport Login from \"./components/authorization/Login\"\nimport Register from \"./components/authorization/Register\"\nimport Home from \"./components/blog/Home\"\nimport Settings from \"./components/settings/Settings\"\nimport PasswordReset from \"./components/settings/PasswordReset\"\nimport PasswordResetConfirm from \"./components/settings/PasswordResetConfirm\"\nimport Header from \"./components/basic/Header\"\nimport Footer from \"./components/basic/Footer\"\nimport BasicRoute from \"./components/basic/BasicRoute\"\nimport PublicRoute from \"./routes/PublicRoute\"\nimport PrivateRoute from \"./routes/PrivateRoute\"\nimport Post from \"./components/blog/Post\"\n\n\nconst App = () => {\n    const [user] = useState(parseJwt(token)?.user_name)\n    const [categories, setCategories] = useState([])\n    const [posts, setPosts] = useState([])\n    const [users, setUsers] = useState([])\n    const [select, setSelect] = useState('-1')\n    const [currentPage, setCurrentPage] = useState(1)\n    const [postsPerPage] = useState(5)\n    const [loading, setLoading] = useState(false)\n\n\n    let indexOfLastPost = currentPage * postsPerPage\n    let indexOfFirstPost = indexOfLastPost - postsPerPage\n    let currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost)\n\n    const paginate = (pageNumber) => setCurrentPage(pageNumber)\n\n\n    useEffect(() => {\n        let mounted = true\n        setLoading(true)\n        getAllCategories().then(res => {\n            if (mounted) {\n                setCategories(res.data)\n                setLoading(false)\n            }\n        })\n        return () => { mounted = false }\n    }, [])\n\n    useEffect(() => {\n        let mounted = true\n        getAllPosts().then(res => {\n            if (mounted) {\n                user && setPosts(res.data)\n            }\n        })\n        return () => { mounted = false }\n    }, [user])\n\n    useEffect(() => {\n        let mounted = true\n        getAllUsers().then(res => {\n            if (mounted) {\n                setUsers(res.data)\n            }\n        })\n        return () => { mounted = false }\n    }, [])\n\n    return (\n        <>\n            <Router>\n                <Header user={user} />\n                <main>\n                    <Switch>\n                        <PublicRoute exact path=\"/\" Component={() => <BasicRoute />} />\n                        <PublicRoute exact path=\"/login\" Component={() => <Login />} />\n                        <PublicRoute exact path=\"/register\" Component={() => <Register />} />\n                        <PublicRoute exact path=\"/password-reset\" Component={() => <PasswordReset />} />\n                        <PublicRoute exact path=\"/password-reset-confirm\" Component={() => <PasswordResetConfirm />} />\n                        <PrivateRoute exact path=\"/home\" user={user} Component={() => <Home user={user} posts={select === '-1' ? currentPosts : currentPosts.filter(post => post.category === Number(select))} users={users} categories={categories} setSelect={setSelect} loading={loading} postsPerPage={postsPerPage} totalPosts={posts.length} paginate={paginate} />} />\n                        <PrivateRoute exact path=\"/home/:slug\" user={user} Component={() => <Post user={user} users={users} />} />\n                        <PrivateRoute exact path=\"/admin\" user={user} Component={() => <Admin user={user} categories={categories} />} />\n                        <PrivateRoute exact path=\"/admin/:id\" user={user} Component={() => <AdminPost categories={categories} />} />\n                        <PrivateRoute exact path=\"/settings\" user={user} Component={() => <Settings user={user} />} />\n                    </Switch>\n                </main>\n                \n                <Footer />\n            </Router>\n        </>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}